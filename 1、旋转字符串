1.1 旋转字符串
题目描述

给定一个字符串，要求把字符串前面的若干个字符移动到字符串的尾部，如把字符串“abcdef”前面的2个字符'a'和'b'移动到字符串的尾部，得原字符串变成字符串“cdefab”。请写一个函数完成此功能，要求对长度为n的字符串操作的时间复杂度为 O(n)，空间复杂度为 O(1)
======
--1、暴力旋转
保存第一个字符，其余向左移动，最后把保存的字符放到最后面。
多个字符移动时，重复上面的移动过程。因此，移动m个字符，
void moveOneEnd(char* s, int n){//O(n),空间O(1)
	char t = s[0];//保存第一个字符
	for(int i = 1, i < n; i++){
		s[i-1]=s[i];//向前移动一位
	}
	s[n-1] = t;//将原来第一个赋值给结尾
}
void moveMEnd(char* s, int n, int m){//O(m*n)
	while(m--){
		moveOneEnd(s, n);
	}
}

--2、转置法
(A^TB^T)^T=BA
abcdef->ab,cdef
ab->ba,cdef->fedc
bafedc->cdefab
void reverseString(char* s, int n, int m){//O(n),O(1)
	while(n < m){
		char t  = s[n];
		s[n++] = s[m];
		s[m--] = t;
	}
}
reverseString(char* s, int 0, int n-1);
reverseString(char* s, int n, int m-1);
reverseString(char* s, int 0, int m-1);
